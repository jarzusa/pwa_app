version: '3.8'

services:

  # nginx:
  #   container_name: nginxpwa
  #   image: nginx:stable-alpine
  #   ports:
  #     - '8080:80'
  #   volumes:
    # - ./app:/var/www/app
    #  - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    # depends_on:
    #   - php
    #   - database

  dbscan:
    container_name: dbscan 
    image: mysql/mysql-server:8.0.27
    # sql_mode, removed ONLY_FULL_GROUP_BY,
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    environment:
      MYSQL_DATABASE: dev
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_USER: sandbox_user
#      MYSQL_PASSWORD: passpass
      MYSQL_ROOT_HOST: '%'
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3306:3306'
    volumes:
      - './docker-db/data:/var/lib/mysql'
      - './docker-db/my.cnf:/etc/mysql/conf.d/my.cnf'
      - './docker-db/sql:/docker-entrypoint-initdb.d'

  backend:
      command: sh -c "pnpm install && pnpm start:dev"
      build:
        context: ./pwa_backend
        dockerfile: ./../Dockerfile
      container_name: backend
      ports:
        - '9000:3000'
      volumes:
        - ./pwa_backend:/var/www/html/
        - ./pwa_backend/node_modules:/var/www/html/node_modules 
      depends_on: 
        - dbscan

  frontend:
    command: sh -c "pnpm install && pnpm serve"
    build:
      context: ./pwa_frontend
      dockerfile: ./../Dockerfile
    container_name: frontend
    ports:
      - '3000:8080'
    volumes:
      - ./pwa_frontend:/var/www/html/
      - ./pwa_frontend/node_modules:/var/www/html/node_modules